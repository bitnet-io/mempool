"use strict";(self.webpackChunkmempool=self.webpackChunkmempool||[]).push([[830],{2830:(I,u,_)=>{let f,o;function L(){return f||(f=new Promise((e,n)=>{const t=document.createElement("script");t.src="/resources/wallycore/wallycore.js",t.addEventListener("error",n),t.addEventListener("load",()=>InitWally().then(r=>{o=r,e()},n)),document.body.appendChild(t)}))}function S(e,n,t,r){const i=s(n,32),a=s(t,32),p=h(i,s(r,32)),T=b(e,a,p);return{asset_commitment:E(p),value_commitment:E(T)}}function h(e,n){const t=o._malloc(33);y(o.ccall("wally_asset_generator_from_bytes","number",["array","number","array","number","number","number"],[e,e.length,n,n.length,t,33]));const r=w(t,33);return o._free(t),r}function b(e,n,t){const[r,i]=function N(e){let n=0|e;n<0&&(n+=4294967296);let t=e-n;if(t/=4294967296,t<0||t>=1048576)throw new Error("not an int52: "+e);return[n,t]}(e),a=o._malloc(33);y(o.ccall("wally_asset_value_commitment","number",["number","number","array","number","array","number","number","number"],[r,i,n,n.length,t,t.length,a,33]));const c=w(a,33);return o._free(a),c}function y(e){if(0!=e)throw new Error(`libwally failed with code ${e}`)}function w(e,n){const t=new Uint8Array(n);for(let r=0;r<n;r++)t[r]=o.getValue(e+r,"i8");return t}function E(e){return Array.from(e).map(n=>n.toString(16).padStart(2,"0")).join("")}function s(e,n){if(!/^([0-9a-f]{2})+$/.test(e))throw new Error("Invalid blinders (invalid hex)");if(e.length!=2*n)throw new Error("Invalid blinders (invalid length)");return new Uint8Array(e.match(/.{2}/g).map(t=>parseInt(t,16)).reverse())}_.r(u),_.d(u,{asset_generator_from_bytes:()=>h,asset_value_commitment:()=>b,generate_commitments:()=>S,load:()=>L})}}]);